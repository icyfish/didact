{"version":3,"sources":["src/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAAS,aAAT,CAAuB,IAAvB,EAA6B,KAA7B,EAAkC;AAAE,MAAA,QAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,CAAA,QAAA,EAAA,IAAW;AAAX,IAAA,QAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAClC,SAAO;AACL,IAAA,IAAI,EAAA,IADC;AAEL,IAAA,KAAK,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACA,KADA,CAAA,EACK;AACR,MAAA,QAAQ,EAAE,QAAQ,CAAC,GAAT,CAAa,UAAA,KAAA,EAAK;AAC1B,eAAA,QAAO,KAAP,MAAiB,QAAjB,GAA4B,KAA5B,GAAoC,iBAAiB,CAAC,KAAD,CAArD;AAA4D,OADpD;AADF,KADL;AAFA,GAAP;AASD;;AAED,SAAS,iBAAT,CAA2B,IAA3B,EAA+B;AAC7B,SAAO;AACL,IAAA,IAAI,EAAE,cADD;AAEL,IAAA,KAAK,EAAE;AACL,MAAA,SAAS,EAAE,IADN;AAEL,MAAA,QAAQ,EAAE;AAFL;AAFF,GAAP;AAOD;;AAED,SAAS,MAAT,CAAgB,OAAhB,EAAyB,SAAzB,EAAkC;AAChC,MAAM,GAAG,GACP,OAAO,CAAC,IAAR,IAAgB,cAAhB,GACI,QAAQ,CAAC,cAAT,CAAwB,EAAxB,CADJ,GAEI,QAAQ,CAAC,aAAT,CAAuB,OAAO,CAAC,IAA/B,CAHN;;AAIA,MAAM,UAAU,GAAG,SAAb,UAAa,CAAA,GAAA,EAAG;AAAI,WAAA,GAAG,KAAK,UAAR;AAAkB,GAA5C;;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,OAAO,CAAC,KAApB,EACG,MADH,CACU,UADV,EAEG,OAFH,CAEW,UAAA,IAAA,EAAI;AACX,IAAA,GAAG,CAAC,IAAD,CAAH,GAAY,OAAO,CAAC,KAAR,CAAc,IAAd,CAAZ;AACD,GAJH;AAKA,EAAA,OAAO,CAAC,KAAR,CAAc,QAAd,CAAuB,OAAvB,CAA+B,UAAA,KAAA,EAAK;AAAI,WAAA,MAAM,CAAC,KAAD,EAAQ,GAAR,CAAN;AAAkB,GAA1D;AACA,EAAA,SAAS,CAAC,WAAV,CAAsB,GAAtB;AACD;;AAED,IAAM,MAAM,GAAG;AACb,EAAA,aAAa,EAAA,aADA;AAEb,EAAA,MAAM,EAAA;AAFO,CAAf;AAKA,IAAM,OAAO,GACZ,wCADD,EAGA;AACA;AACA;AACA;AACA;;AACA,IAAM,SAAS,GAAG,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAAlB;AACA,MAAM,CAAC,MAAP,CAAc,OAAd,EAAuB,SAAvB","file":"src.fc45d0fd.js","sourceRoot":"..","sourcesContent":["function createElement(type, props, ...children) {\n  return {\n    type,\n    props: {\n      ...props,\n      children: children.map(child =>\n        typeof child === \"object\" ? child : createTextElement(child)\n      )\n    }\n  };\n}\n\nfunction createTextElement(text) {\n  return {\n    type: \"TEXT_ELEMENT\",\n    props: {\n      nodeValue: text,\n      children: []\n    }\n  };\n}\n\nfunction render(element, container) {\n  const dom =\n    element.type == \"TEXT_ELEMENT\"\n      ? document.createTextNode(\"\")\n      : document.createElement(element.type);\n  const isProperty = key => key !== \"children\";\n  Object.keys(element.props)\n    .filter(isProperty)\n    .forEach(name => {\n      dom[name] = element.props[name];\n    });\n  element.props.children.forEach(child => render(child, dom));\n  container.appendChild(dom);\n}\n\nconst Didact = {\n  createElement,\n  render\n};\n\nconst element = (\n\t<div>123</div>\n)\n// const element = Didact.createElement(\n//   \"h1\",\n//   { style: { color: \"red\" } },\n//   \"hello\"\n// );\nconst container = document.getElementById(\"root\");\nDidact.render(element, container);\n"]}